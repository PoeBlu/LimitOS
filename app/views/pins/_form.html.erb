<%= form_for [@device, @pin], :html => { :class => "form-horizontal pin" } do |f| %>

  <%= hidden_field_tag :device_id, @device.id %>

  <% if @pin.errors.any? %>
    <div id="error_expl" class="panel panel-danger">
      <div class="panel-heading">
        <h3 class="panel-title"><%= pluralize(@pin.errors.count, "error") %> prohibited this pin from being saved:</h3>
      </div>
      <div class="panel-body">
        <ul>
        <% @pin.errors.full_messages.each do |msg| %>
          <li><%= msg %></li>
        <% end %>
        </ul>
      </div>
    </div>
  <% end %>

  <div class="form-group">
    <%= f.label :name, :class => 'control-label col-lg-4' %>
    <div class="col-lg-8">
      <%= f.text_field :name, class: 'form-control', autofocus: !@pin.persisted?, placeholder: 'Name for this device' %>
    </div>
    <%=f.error_span(:name) %>
  </div>
  <div class="form-group">
    <%= f.label :pin_type, :class => 'control-label col-lg-4' %>
    <div class="col-lg-8">
      <%= f.select :pin_type, Pin::PIN_TYPES, { include_blank: true }, { class: 'form-control' } %>
    </div>
    <%=f.error_span(:pin_type) %>
  </div>
  <div class="form-group">
    <%= f.label :pin_number, :class => 'control-label col-lg-4' %>
    <div class="col-lg-8">
      <%= f.text_field :pin_number, class: 'form-control', placeholder: 'Physical pin number on the microcontroller' %>
    </div>
    <%=f.error_span(:pin_number) %>

    <% if @device.device_type == 'raspberry_pi' %>
      <div class="col-lg-push-4 col-lg-8" style="padding-top: 5px;">
        Please use <a href="https://www.raspberrypi.org/documentation/usage/gpio/README.md" target="blank">GPIO pin numbering</a> when setting your pin number.
      </div>
    <% elsif @device.device_type == 'arduino' %>
      <div class="col-lg-push-4 col-lg-8" style="padding-top: 5px;">
        Please use <a href="https://playground.arduino.cc/Learning/AnalogPins" target="blank">Arduino pin numbers</a> when setting your pin number.
        <br>
        For example on an Arduino Uno use <b>14</b> for the <b>A0</b> pin, and on an Arduino Mega use <b>54</b> for the <b>A0</b> pin.
      </div>
    <% end %>

  </div>
  <div class="form-group">
    <%= f.label :min, :class => 'control-label col-lg-4' %>
    <div class="col-lg-8">
      <%= f.text_field :min, class: 'form-control', placeholder: 'Minimum allowed value' %>
    </div>
    <%=f.error_span(:min) %>
  </div>
  <div class="form-group">
    <%= f.label :max, :class => 'control-label col-lg-4' %>
    <div class="col-lg-8">
      <%= f.text_field :max, class: 'form-control', placeholder: 'Maximum allowed value' %>
    </div>
    <%=f.error_span(:max) %>
  </div>
  <div class="form-group">
    <%= f.label :output_pin_number, :class => 'control-label col-lg-4' %>
    <div class="col-lg-8">
      <%= f.text_field :output_pin_number, class: 'form-control', placeholder: 'Redirects the input values to another (output) pin' %>
    </div>
    <%=f.error_span(:output_pin_number) %>
  </div>
  <div class="form-group">
    <%= f.label :transform, :class => 'control-label col-lg-4' %>
    <div class="col-lg-8">
      <%= f.text_field :transform, class: 'form-control', placeholder: "Logic to modify the input values before they're sent to an output pin" %>

      <div class="pull-right" style="padding-top: 5px;">
        <a id="common-transforms-link">common transforms</a>
      </div>

      <div id="common-transforms-div" class="hide">
        <div class="radio">
          <label><input type="radio" name="common-transforms-radio" id="absolute-value-transform">absolute value</label>
        </div>
        <div class="radio">
          <label><input type="radio" name="common-transforms-radio" id="map-transform">map input range to output range</label>
          <div id="map-tranform-form" style="padding-left: 20px;" class="hide">
            Input range start: <input type="text" class="map-input" id="map-from-low" value="0"><br>
            Input range end: <input type="text" class="map-input" id="map-from-high" value="1023"><br>
            Output range start: <input type="text" class="map-input" id="map-to-low" value="0"><br>
            Output range end: <input type="text" class="map-input" id="map-to-high" value="100"><br>
          </div>
        </div>
        <div class="radio">
          <label><input type="radio" name="common-transforms-radio" id="round-transform">round</label>
        </div>
      </div>

    </div>
    <%=f.error_span(:transform) %>
  </div>

  <div class="form-group">
    <div class="col-lg-offset-4 col-lg-8">
      <%= f.submit nil, :class => 'btn btn-primary' %>
      <%= link_to t('.cancel', :default => t("helpers.links.cancel")),
                device_path(@device), :class => 'btn btn-default' %>
    </div>
  </div>

<% end %>

<script>

  // when the document is ready
  $(document).ready(function() {

    // when the 'common transforms' link is clicked
    $('#common-transforms-link').on('click', function() {
      // hide the link
      $('#common-transforms-link').addClass('hide');
      // show the common-transforms div
      $('#common-transforms-div').removeClass('hide');
    });

    // when the absolute value transform is clicked
    $('#absolute-value-transform').on('click', function() {
      // set the transform value
      $('#pin_transform').val('if (x > 0, x, -x)');
    });

    // when the map transform is clicked
    $('#map-transform').on('click', function() {
      // show the form
      $('#map-tranform-form').removeClass('hide');
      // calculate the map equation
      displayMapEquation();
    });

    // when the map values are changed
    $('.map-input').on('input', function() {
      // calculate the map equation
      displayMapEquation();
    });

    // when the round transform is clicked
    $('#round-transform').on('click', function() {
      // set the transform value
      $('#pin_transform').val('round(X, 0)');
    });

    // function to display map values
    function displayMapEquation() {
      // get the values
      var input_low = $('#map-from-low').val();
      var input_high = $('#map-from-high').val();
      var output_low = $('#map-to-low').val();
      var output_high = $('#map-to-high').val();

      // set the transform value
      $('#pin_transform').val('round((x - ' + input_low + ') * (' + output_high + ' - ' + output_low + ') / (' + input_high + ' - ' + input_low + ') + ' + output_low + ', 0)');
    }

  });

</script>

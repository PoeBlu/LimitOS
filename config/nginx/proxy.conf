user www-data;
worker_processes 1;

events {
    worker_connections 10000;
    use epoll;
    multi_accept on;
}

# allow more files to be open
worker_rlimit_nofile    200000;

http {

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 1800;
    types_hash_max_size 2048;

    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # Dropping SSLv3, ref: POODLE
    ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';
    ssl_prefer_server_ciphers on;
    ssl_dhparam /etc/nginx/ssl/dhparam.pem;

    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    gzip on;
    gzip_disable "msie6";

    # load balancer
    upstream limitos_balancer {
        server 172.31.20.86; # webserver1
    }

    # http server
    server {
        listen 80;
        #server_name .limitos.com;

        rewrite ^(.*) https://limitos.com$1 permanent;
    }

    # https://limitos.com
    server {
        listen 443;
        server_name limitos.com;

        ssl on;
        ssl_certificate /etc/letsencrypt/live/limitos.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/limitos.com/privkey.pem;

        # for websockets
        location /cable {
            proxy_pass http://limitos_balancer;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
        }

        # for normal traffic
        location / {
            proxy_pass http://limitos_balancer;
            proxy_send_timeout 600;
            proxy_read_timeout 600;
            # don't retry requests
            proxy_next_upstream off;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-For $remote_addr;
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            # remove client-ip header, since we use x-forwarded-for
            proxy_set_header Client-Ip "";
        }
    }

    # https://www.limitos.com
    server {
       listen 443 ssl;
        server_name www.limitos.com;
        return 301 https://limitos.com$request_uri;
    }

}
